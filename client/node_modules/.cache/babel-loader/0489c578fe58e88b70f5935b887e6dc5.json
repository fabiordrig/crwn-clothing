{"ast":null,"code":"import { takeEvery, call } from \"redux-saga/effects\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"./shop.actions\";\nimport ShopActionTypes from \"./shop.types\";\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"iam fried\");\n  const collectionRef = firestore.collection(\"collections\");\n  const snapshot = yield collectionRef.get();\n  const collectionMap = yield call(convertCollectionsSnapshotToMap, snapshot); // collectionRef\n  //   .get()\n  //   .then((snapshot) => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //     dispatch(fetchCollectionsSuccess(collectionsMap));\n  //   })\n  //   .catch((err) => fetchCollectionsSuccess(err.message));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/home/fabio/repo/playground/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionMap","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,QAAgC,oBAAhC;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAN;AACA,QAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,QAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,QAAMC,aAAa,GAAG,MAAMb,IAAI,CAACE,+BAAD,EAAkCS,QAAlC,CAAhC,CAJuC,CAMvC;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AAED,OAAO,UAAUG,qBAAV,GAAkC;AACvC,QAAMf,SAAS,CAACM,eAAe,CAACU,uBAAjB,EAA0CT,qBAA1C,CAAf;AACD","sourcesContent":["import { takeEvery, call } from \"redux-saga/effects\";\n\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\n\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"./shop.actions\";\n\nimport ShopActionTypes from \"./shop.types\";\n\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"iam fried\");\n  const collectionRef = firestore.collection(\"collections\");\n  const snapshot = yield collectionRef.get();\n  const collectionMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n\n  // collectionRef\n  //   .get()\n  //   .then((snapshot) => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //     dispatch(fetchCollectionsSuccess(collectionsMap));\n  //   })\n  //   .catch((err) => fetchCollectionsSuccess(err.message));\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\n"]},"metadata":{},"sourceType":"module"}
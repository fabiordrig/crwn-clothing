{"ast":null,"code":"var _jsxFileName = \"/home/fabio/repo/playground/crwn-clothing/src/components/sign-up/sign-up.component.jsx\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { signUpStart } from \"../../redux/user/user.actions\";\nimport { SignUpContainer, SignUpTitle } from \"./sign-up.styles\";\n\nconst SignUp = () => {\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const signUpStart = this.props.signUpStart;\n    const _this$state = this.state,\n          displayName = _this$state.displayName,\n          email = _this$state.email,\n          password = _this$state.password,\n          confirmPassword = _this$state.confirmPassword;\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  const _this$state2 = this.state,\n        displayName = _this$state2.displayName,\n        email = _this$state2.email,\n        password = _this$state2.password,\n        confirmPassword = _this$state2.confirmPassword;\n  return React.createElement(SignUpContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(SignUpTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"I do not have a account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: this.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: this.handleChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: this.handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: this.handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: this.handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/home/fabio/repo/playground/crwn-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUpContainer","SignUpTitle","SignUp","handleSubmit","event","preventDefault","props","state","displayName","email","password","confirmPassword","alert","handleChange","target","name","value","setState","mapDispatchToProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\n\nimport { signUpStart } from \"../../redux/user/user.actions\";\n\nimport { SignUpContainer, SignUpTitle } from \"./sign-up.styles\";\n\nconst SignUp = () => {\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const { signUpStart } = this.props;\n    const { displayName, email, password, confirmPassword } = this.state;\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    signUpStart({ displayName, email, password });\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  };\n\n  const { displayName, email, password, confirmPassword } = this.state;\n  return (\n    <SignUpContainer>\n      <SignUpTitle>I do not have a account</SignUpTitle>\n      <span>Sign up with your email and password</span>\n      <form className=\"sign-up-form\" onSubmit={this.handleSubmit}>\n        <FormInput\n          type=\"text\"\n          name=\"displayName\"\n          value={displayName}\n          onChange={this.handleChange}\n          label=\"Display Name\"\n          required\n        />\n        <FormInput\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={this.handleChange}\n          label=\"Email\"\n          required\n        />\n        <FormInput\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={this.handleChange}\n          label=\"Password\"\n          required\n        />\n        <FormInput\n          type=\"password\"\n          name=\"confirmPassword\"\n          value={confirmPassword}\n          onChange={this.handleChange}\n          label=\"Confirm Password\"\n          required\n        />\n        <CustomButton type=\"submit\">SIGN UP</CustomButton>\n      </form>\n    </SignUpContainer>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials)),\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}
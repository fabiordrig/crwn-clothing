{"ast":null,"code":"var _jsxFileName = \"/home/fabio/repo/playground/crwn-clothing/src/pages/collection/collection.component.jsx\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport CollectionItem from \"../../components/collection-item/collection-item.component\";\nimport { selectCollection } from \"../../redux/shop/shop.selectors\";\nimport { firestore } from \"../../firebase/firebase.utils\";\nimport { CollectionPageContainer, CollectionTitle, CollectionItemsContainer } from \"./collection.styles\";\n\nconst CollectionPage = ({\n  collection\n}) => {\n  useEffect(() => {\n    const unsubscribeFromCollections = firestore.collection(\"collections\").onSnapshot();\n    return () => {\n      unsubscribeFromCollections();\n    };\n  });\n  const title = collection.title,\n        items = collection.items;\n  return React.createElement(CollectionPageContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(CollectionTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, title), React.createElement(CollectionItemsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, items.map(item => React.createElement(CollectionItem, {\n    key: item.id,\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(mapStateToProps)(CollectionPage);","map":{"version":3,"sources":["/home/fabio/repo/playground/crwn-clothing/src/pages/collection/collection.component.jsx"],"names":["React","useEffect","connect","CollectionItem","selectCollection","firestore","CollectionPageContainer","CollectionTitle","CollectionItemsContainer","CollectionPage","collection","unsubscribeFromCollections","onSnapshot","title","items","map","item","id","mapStateToProps","state","ownProps","match","params","collectionId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,cAAP,MAA2B,4DAA3B;AAEA,SAASC,gBAAT,QAAiC,iCAAjC;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,SACEC,uBADF,EAEEC,eAFF,EAGEC,wBAHF,QAIO,qBAJP;;AAMA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACzCT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,0BAA0B,GAAGN,SAAS,CAACK,UAAV,CAAqB,aAArB,EAAoCE,UAApC,EAAnC;AACA,WAAO,MAAM;AACXD,MAAAA,0BAA0B;AAC3B,KAFD;AAGD,GALQ,CAAT;AADyC,QAQjCE,KARiC,GAQhBH,UARgB,CAQjCG,KARiC;AAAA,QAQ1BC,KAR0B,GAQhBJ,UARgB,CAQ1BI,KAR0B;AASzC,SACE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBD,KAAlB,CADF,EAEE,oBAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,CAACC,GAAN,CAAWC,IAAD,IACT,oBAAC,cAAD;AAAgB,IAAA,GAAG,EAAEA,IAAI,CAACC,EAA1B;AAA8B,IAAA,IAAI,EAAED,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAFF,CADF;AAUD,CAnBD;;AAqBA,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AAC5CV,EAAAA,UAAU,EAAEN,gBAAgB,CAACgB,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBC,YAAvB,CAAhB,CAAqDJ,KAArD;AADgC,CAAtB,CAAxB;;AAIA,eAAejB,OAAO,CAACgB,eAAD,CAAP,CAAyBT,cAAzB,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport CollectionItem from \"../../components/collection-item/collection-item.component\";\n\nimport { selectCollection } from \"../../redux/shop/shop.selectors\";\nimport { firestore } from \"../../firebase/firebase.utils\";\nimport {\n  CollectionPageContainer,\n  CollectionTitle,\n  CollectionItemsContainer,\n} from \"./collection.styles\";\n\nconst CollectionPage = ({ collection }) => {\n  useEffect(() => {\n    const unsubscribeFromCollections = firestore.collection(\"collections\").onSnapshot();\n    return () => {\n      unsubscribeFromCollections();\n    };\n  });\n\n  const { title, items } = collection;\n  return (\n    <CollectionPageContainer>\n      <CollectionTitle>{title}</CollectionTitle>\n      <CollectionItemsContainer>\n        {items.map((item) => (\n          <CollectionItem key={item.id} item={item} />\n        ))}\n      </CollectionItemsContainer>\n    </CollectionPageContainer>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state),\n});\n\nexport default connect(mapStateToProps)(CollectionPage);\n"]},"metadata":{},"sourceType":"module"}